import { Button, Card, CardContent, FormControlLabel, Radio, RadioGroup, TextField, Typography } from '@mui/material';
import React, { useCallback, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';

const PaymentPage = () => {
  const navigate = useNavigate();
  const location = useLocation();

  // ƒê·∫£m b·∫£o t·∫•t c·∫£ hooks lu√¥n ƒë∆∞·ª£c g·ªçi tr∆∞·ªõc b·∫•t k·ª≥ ƒëi·ªÅu ki·ªán n√†o
  const [paymentMethod, setPaymentMethod] = useState('bank_transfer');
  const [message, setMessage] = useState('');

  // L·∫•y d·ªØ li·ªáu t·ª´ location.state, tr√°nh l·ªói undefined
  const { bookingId, totalPrice, customerId, hostId } = location.state || {};

  // H√†m thanh to√°n
  const handlePayment = useCallback(async () => {
    if (!bookingId || !totalPrice || !customerId) {
      alert("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!");
      return;
    }

    try {
      const response = await fetch('http://localhost:3002/payment/create_payment_url', {
        method: 'POST',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ bookingId, totalPrice, customerId, paymentMethod }),
      });

      const data = await response.json();
      if (response.ok && data.paymentUrl) {
        window.location.href = data.paymentUrl;
      } else {
        alert(data.message || "Kh√¥ng th·ªÉ t·∫°o URL thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i.");
      }
    } catch (err) {
      console.error("üî• L·ªói khi t·∫°o URL thanh to√°n:", err);
      alert("C√≥ l·ªói x·∫£y ra khi t·∫°o ƒë∆°n thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  }, [bookingId, totalPrice, customerId, paymentMethod]);

  // H√†m g·ª≠i tin nh·∫Øn
  const handleSendMessage = useCallback(async () => {
    if (!customerId || !hostId || !message) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin tr∆∞·ªõc khi g·ª≠i tin nh·∫Øn!");
      return;
    }

    try {
      const response = await fetch('http://localhost:3002/chat/send_message', {
        method: 'POST',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ senderId: customerId, receiverId: hostId, message }),
      });

      if (response.ok) {
        alert("Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i!");
        setMessage('');
      } else {
        alert("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn. Vui l√≤ng th·ª≠ l·∫°i.");
      }
    } catch (err) {
      console.error("üî• L·ªói khi g·ª≠i tin nh·∫Øn:", err);
      alert("C√≥ l·ªói x·∫£y ra khi g·ª≠i tin nh·∫Øn. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  }, [customerId, hostId, message]);

  return (
    <Card sx={{ maxWidth: 500, margin: 'auto', mt: 5, p: 3 }}>
      <CardContent>
        <Typography variant="h5" gutterBottom>Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n</Typography>
        
        {/* Hi·ªÉn th·ªã l·ªói n·∫øu thi·∫øu d·ªØ li·ªáu */}
        {!bookingId || !totalPrice || !customerId || !hostId ? (
          <Typography variant="h6" color="error">
            D·ªØ li·ªáu thanh to√°n kh√¥ng h·ª£p l·ªá. Vui l√≤ng quay l·∫°i trang tr∆∞·ªõc.
          </Typography>
        ) : (
          <>
            <Typography variant="h6" color="primary" gutterBottom>T·ªïng ti·ªÅn: {totalPrice} VND</Typography>

            <RadioGroup value={paymentMethod} onChange={(e) => setPaymentMethod(e.target.value)}>
              <FormControlLabel value="bank_transfer" control={<Radio />} label="Chuy·ªÉn kho·∫£n ng√¢n h√†ng" />
              <FormControlLabel value="system_balance" control={<Radio />} label="N·∫°p v√†o h·ªá th·ªëng" />
            </RadioGroup>

            <Button variant="contained" color="primary" fullWidth onClick={handlePayment} sx={{ mt: 2 }}>
              Thanh to√°n
            </Button>

            <Typography variant="h6" sx={{ mt: 4 }}>Nh·∫Øn tin v·ªõi ng∆∞·ªùi ƒëƒÉng b√†i</Typography>
            <TextField
              fullWidth
              label="Tin nh·∫Øn"
              multiline
              rows={3}
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              sx={{ mt: 2 }}
            />

            <Button variant="contained" color="secondary" fullWidth onClick={handleSendMessage} sx={{ mt: 2 }}>
              G·ª≠i tin nh·∫Øn
            </Button>
          </>
        )}
      </CardContent>
    </Card>
  );
};

export default PaymentPage;
